# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    paths-ignore: ["client/**"]
    branches: [ "bedev" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: wiselife-main
  RESOURCE_PATH: ./server/wiselife/src/main/resources/application-aws.yml
  
jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.datasource.url: jdbc:mysql://${{ secrets.ENDPOINT }}:${{ secrets.PORT }}/wiselife_db?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
        spring.datasource.username: ${{ secrets.DB_ID }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        jwt.token.secret-key: ${{ secrets.JWT_SECRET_KEY }}
        cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY }}
        cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        kakaopay.kakaoAk: ${{ secrets.KAKAO_AUTH_ORDER_KEY }}
        spring.security.oauth2.cilent.registration.client-id: ${{ secrets.KAKAO_CILENT_ID }}
        spring.security.oauth2.cilent.registration.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}

     # grant execute permission for gradlew
    - name : Grant execute permission for gradlew
      run: chmod +x server/wiselife/gradlew
      shell: bash

    # build gradlew
    - name: Build with Gradle
      run: cd server/wiselife; ./gradlew build
      shell: bash
      env:
        RDS_ENDPOINT: ${{ secrets.ENDPOINT }}
        RDS_PORT: ${{ secrets.PORT }}
        DB_ID: ${{ secrets.DB_ID }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        KAKAO_CILENT_ID: ${{ secrets.KAKAO_CILENT_ID }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        KAKAO_AUTH_ORDER_KEY: ${{ secrets.KAKAO_AUTH_ORDER_KEY }}
    
    - name: Make zip file
      run: zip -r ./wiselife-deploy.zip .
      shell: bash
       
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./wiselife-deploy.zip s3://$S3_BUCKET_NAME/wiselife-deploy.zip

      # CodeDeploy에게 배포 명령을 내립니다.
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name wiselife-cicd
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name cicd-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=wiselife-deploy.zip
